name: Android APK

on:
  workflow_dispatch:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Prepare Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install system deps
        run: |
          sudo apt-get update -y
          sudo apt-get install -y \
            openjdk-17-jdk git zip unzip build-essential ccache \
            libncurses5 libstdc++6 zlib1g-dev libffi-dev libssl-dev \
            autoconf automake libtool pkg-config

      - name: Install build tools
        run: |
          python -m pip install --upgrade pip wheel setuptools
          python -m pip install "buildozer==1.5.0"
          # Relax p4a pin for latest fixes if needed:
          python -m pip install "python-for-android"

      - name: Check versions
        run: |
          java -version
          python -V
          buildozer --version || true

      - name: Build debug APK
        env:
          BUILDOZER_ALLOW_ROOT: "1"
        run: |
          # cache cleanup (safe)
          rm -rf .buildozer android/.gradle || true
          yes | buildozer -v android debug

      - name: Collect artifact
        run: |
          mkdir -p dist
          APK=$(ls .buildozer/android/platform/build-armeabi-v7a/dists/*/bin/*.apk .buildozer/android/platform/build-arm64-v8a/dists/*/bin/*.apk 2>/dev/null | head -n1 || true)
          # Fallback location Buildozer sometimes uses:
          [ -z "$APK" ] && APK=$(ls bin/*.apk 2>/dev/null | head -n1 || true)
          if [ -z "$APK" ]; then
            echo "No APK found."
            exit 1
          fi
          cp "$APK" dist/pocket_pos_lite-debug.apk
          ls -al dist

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: pocket-pos-lite-apk
          path: dist/pocket_pos_lite-debug.apk
